{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","input","display","App","columnRegex","RegExp","useState","article","setArticle","selectedFile","setSelectedFile","generatedArticles","setGeneratedArticles","error","generateAritcles","workbook","matches","matchAll","console","log","worksheet","worksheets","_articles","eachRow","includeEmpty","row","rowNumber","_article","repeat","forEach","match","replace","getCell","toUpperCase","push","classes","Container","maxWidth","className","Box","onSubmit","e","preventDefault","reader","FileReader","onload","a","ExcelJS","Workbook","xlsx","load","target","result","readAsArrayBuffer","TextField","fullWidth","variant","label","rows","helperText","value","onInput","multiline","accept","id","type","onChange","files","htmlFor","Button","color","disabled","Collapse","in","Alert","severity","hidden","length","map","Card","CardContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mmBAOMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPC,OAAQF,EAAMG,QAAQ,KAG1BC,MAAO,CACLC,QAAS,YAqGEC,MAhGf,WAAgB,IAAD,EACPC,EAAc,IAAIC,OAAO,wBADlB,EAEiBC,mBAAS,IAF1B,mBAENC,EAFM,KAEGC,EAFH,OAG2BF,mBAAS,MAHpC,mBAGNG,EAHM,KAGQC,EAHR,OAIqCJ,mBAAS,IAJ9C,mBAINK,EAJM,KAIaC,EAJb,OAKaN,oBAAS,GALtB,mBAKNO,EALM,KAkBb,SAASC,EAAiBC,GACxB,IAAMC,EAAO,YAAOT,EAAQU,SAASb,IACrCc,QAAQC,IAAIH,GACZ,IAAMI,EAAYL,EAASM,WAAW,GAChCC,EAAY,GAClBF,EAAUG,QAAQ,CAAEC,cAAc,IAAQ,SAASC,EAAKC,GACtD,GAAiB,GAAbA,EAAJ,CACA,IAAIC,EAAWpB,EAAQqB,OAAO,GAC9BZ,EAAQa,SAAQ,SAAAC,GACdH,EAAWA,EAASI,QAAQD,EAAM,GAAIL,EAAIO,QAAQF,EAAM,GAAGG,mBAE7DX,EAAUY,KAAKP,OAEjBf,EAAqBU,GA/BV,KAkCb,IAAMa,EAAUxC,IAEhB,OACE,eAACyC,EAAA,EAAD,CAAWC,SAAS,KAAKC,UAAWH,EAAQrC,KAA5C,UACE,cAACyC,EAAA,EAAD,UACE,uBAAMC,SAhCZ,SAA0BC,GACxBA,EAAEC,iBACF,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAP,uCAAgB,WAAMJ,GAAN,eAAAK,EAAA,6DACR/B,EAAW,IAAIgC,IAAQC,SADf,SAERjC,EAASkC,KAAKC,KAAKT,EAAEU,OAAOC,QAFpB,OAGdtC,EAAiBC,GAHH,2CAAhB,sDAKA4B,EAAOU,kBAAkB5C,EAAa,KAwBlC,UACE,cAAC6C,EAAA,EAAD,CAAWC,WAAS,EAClBC,QAAQ,WACRC,MAAM,eACNC,KAAM,GACNC,WAAW,+BACXC,MAAOrD,EACPsD,QAAS,SAAApB,GAAC,OAAIjC,EAAWiC,EAAEU,OAAOS,QAClCE,WAAS,IAGX,uBAAM,uBAKN,gCACE,uBACEC,OAAO,QACPzB,UAAWH,EAAQlC,MACnB+D,GAAG,wBACHC,KAAK,OAELC,SAAU,SAAAzB,GAAC,OAAI/B,EAAgB+B,EAAEU,OAAOgB,UAE1C,uBAAOC,QAAQ,wBAAf,SACE,cAACC,EAAA,GAAD,GAAQb,QAAQ,YAAYc,MAAM,UAAlC,sBAAiD,WAAjD,0BAAqE,QAArE,uDAKJ,uBACA,cAACD,EAAA,EAAD,CAAQb,QAAQ,YAAYc,MAAM,UAAUL,KAAK,SAASM,UAAW9D,IAAiBF,EAAtF,+BAGA,cAACiE,EAAA,EAAD,CAAUC,GAAI5D,EAAd,SACE,cAAC6D,EAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyB9D,WAM/B,cAAC0B,EAAA,EAAD,CAAKqC,OAAoC,GAA5BjE,EAAkBkE,OAA/B,SACGlE,EAAkBmE,KAAI,SAAAvE,GAAO,OAC1B,cAACwE,EAAA,EAAD,UACC,cAACC,EAAA,EAAD,UACE,8BAAMzE,iBC5FN0E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.59b4d400.chunk.js","sourcesContent":["import './App.css';\nimport {TextField, Box, Container, Button, Card, CardContent, Collapse} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useState } from 'react';\nimport ExcelJS from 'exceljs/dist/es5/exceljs.browser.js'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: 'none',\n  }\n}));\n\n\nfunction App() {\n  const columnRegex = new RegExp(/\\{\\{column(\\w+)\\}\\}/g);\n  const [article, setArticle] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [generatedArticles, setGeneratedArticles] = useState([]);\n  const [error, setError] = useState(false);\n  \n  function handleFormSubmit(e) {\n    e.preventDefault();\n    const reader = new FileReader();\n    reader.onload = async e => {\n      const workbook = new ExcelJS.Workbook();\n      await workbook.xlsx.load(e.target.result);\n      generateAritcles(workbook);\n    };\n    reader.readAsArrayBuffer(selectedFile[0]);\n  }\n\n  function generateAritcles(workbook) {\n    const matches = [...article.matchAll(columnRegex)];\n    console.log(matches);\n    const worksheet = workbook.worksheets[0];\n    const _articles = [];\n    worksheet.eachRow({ includeEmpty: true }, function(row, rowNumber) {\n      if (rowNumber == 1) return;\n      var _article = article.repeat(1);\n      matches.forEach(match => {\n        _article = _article.replace(match[0], row.getCell(match[1].toUpperCase()));\n      });\n      _articles.push(_article);\n    });\n    setGeneratedArticles(_articles);\n  }\n\n  const classes = useStyles();\n  \n  return (\n    <Container maxWidth=\"md\" className={classes.root}>\n      <Box>\n        <form onSubmit={handleFormSubmit}>\n          <TextField fullWidth\n            variant=\"outlined\"\n            label=\"Article Text\"\n            rows={10}\n            helperText=\"Variable usage - {{columnA}}\"\n            value={article}\n            onInput={e => setArticle(e.target.value)}\n            multiline>\n              \n          </TextField>\n          <br /><br />\n          {/* <div>\n            <input type=\"file\" accept=\".xlsx, .xls, .csv\"/>\n          </div> */}\n        \n          <div>\n            <input\n              accept=\".xlsx\"\n              className={classes.input}\n              id=\"contained-button-file\"\n              type=\"file\"\n              \n              onChange={e => setSelectedFile(e.target.files)}\n            />\n            <label htmlFor=\"contained-button-file\">\n              <Button variant=\"contained\" color=\"action\" color=\"default\" component=\"span\">\n                Choose Excel File\n              </Button>\n            </label>\n          </div>\n          <br />\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={!selectedFile || !article}>\n            Generate Articles\n          </Button>\n          <Collapse in={error}>\n            <Alert severity=\"error\">{error}</Alert>\n          </Collapse>\n          {/* <CircularProgress size={25} visibility=\"none\"/> */}\n        </form>\n      </Box>\n\n      <Box hidden={generatedArticles.length == 0}>\n        {generatedArticles.map(article => (\n            <Card>\n             <CardContent>\n               <pre>{article}</pre>\n             </CardContent>\n           </Card>\n        ))}        \n       \n        \n      </Box>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}